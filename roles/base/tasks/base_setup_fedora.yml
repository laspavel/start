---
- name: Set required hostname
  hostname:
    name: "{{ hostname_ }}"
  when: (hostname_ is defined)

- name: Set required Selinux status
  selinux:
    policy: targeted
    state: "{{ selinux_status }}"

- name: Update dnf.conf
  copy:
    force: true
    dest: /etc/dnf/dnf.conf
    content: |
        [main]
        gpgcheck=1
        installonly_limit=3
        clean_requirements_on_remove=True
        fastestmirror=true
        max_parallel_downloads=10
        deltarpm=true
        best=False
        max_parallel_downloads=10
        skip_if_unavailable=True

- name: disable fedora-updates-modular.repo
  yum_repository:
    name: fedora-updates-modular
    description: fedora-updates-modular
    metalink: https://mirrors.fedoraproject.org/metalink?repo=updates-released-modular-source-f$releasever&arch=$basearch
    enabled: no

- name: disable fedora-modular.repo
  yum_repository:
    name: fedora-modular
    description: fedora-modular
    metalink: https://mirrors.fedoraproject.org/metalink?repo=fedora-modular-source-$releasever&arch=$basearch
    enabled: no

- name: Upgrade system
  dnf:
    name: "*"
    state: latest
    exclude: kernel*

- name: Enable the RPM Fusion repository
  dnf:
    name: "https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-{{ansible_distribution_major_version}}.noarch.rpm"
    disable_gpg_check: yes
    state: present
  when: ansible_distribution == 'Fedora' 

- name: Enable the RPM Fusion repository
  dnf:
    name: "http://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-{{ansible_distribution_major_version}}.noarch.rpm"
    disable_gpg_check: yes
    state: present
  when: ansible_distribution == 'Fedora'

- name: get google chrome repo
  dnf:
    name: fedora-workstation-repositories
    state: latest

- name: enable google chrome repo
  command: dnf config-manager --set-enabled google-chrome

- name: Enable DoubleCmd repo
  command: dnf copr enable -y vondruch/doublecmd

- name: Install programs
  yum:
    name: "{{ base_required_packages }}"
    state: present

- name: Install the 'Development tools' package group
  yum:
    name: "@Development tools"
    state: present

- name: Install plocate package
  yum:
    name: plocate
    state: present

#- name: Upgrade firmware
#  command: fwupdmgr get-devices -y && fwupdmgr refresh --force -y && fwupdmgr get-updates -y && fwupdmgr update --no-reboot-check -y

- name: Set required timezone
  timezone:
    name: "{{ timezone }}"
  when: (timezone is defined)

- name: start the sshd service and enable it
  systemd:
    name: sshd
    state: started
    enabled: yes

- name: start the firewalld service and enable it
  systemd:
    name: firewalld
    state: started
    enabled: yes

- name: Open port for SSH
  firewalld:
    service: ssh
    permanent: yes
    state: enabled
    immediate: yes

- name: Install git
  yum:
    name: git
    state: present
  
- name: Configure Git Autocomplete
  get_url:
    url: https://raw.githubusercontent.com/git/git/master/contrib/completion/git-completion.bash
    dest: /etc/bash_completion.d/git-completion.bash
    mode: 0664
  changed_when: false

- name: Enable Flatpack repo
  command: flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
