---
- name: remove old docker-engine
  package: 
    name:
      - docker
      - docker-engine
      - docker.io
      - containerd
      - runc
    state: absent

- name: install required packages
  package:
    name:
      - git
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
    state: present

- name: Add Docker GPG apt Key
  apt_key:
    url: https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg
    state: present

- name: Add Docker Repository
  apt_repository:
    repo: "deb https://download.docker.com/linux/{{ ansible_distribution | lower }}  {{ ansible_distribution_release }} stable"
    state: present

- name: apt update
  become: "True"
  apt:
    upgrade: yes
    update_cache: yes
    cache_valid_time: 3600

- name: Update apt and install docker-ce
  package:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-compose-plugin
    state: latest
    update_cache: true

- name: Enable IP Forwarding
  sysctl:
    name: net.ipv4.ip_forward
    value: '1'
    sysctl_set: yes
    state: present
    reload: yes

- name: Create /etc/docker directory
  file:
    path: /etc/docker
    state: directory
    owner: root
    group: root
    mode: 0775

- name: Add daemon.json
  template:
    src: 'daemon.json.j2'
    dest: '/etc/docker/daemon.json'
    owner: 'root'
    group: 'root'
    mode: '0644'
  register: docker__daemon_json_present
  ignore_errors: true
 
- name: enable and start docker
  systemd:
    name: docker
    daemon-reload: yes
    enabled: yes
    state: started

- name: setup a cronjob for docker cleanup
  cron:
    name: docker cleanup
    minute: "0"
    hour: "1"
    user: root
    job: 'docker system prune -f --filter "until=2h" -a >/dev/null 2>&1'
    cron_file: docker_cleanup

- name: setup a cronjob for docker volumes cleanup
  cron:
    name: docker volumes cleanup
    minute: "1"
    hour: "1"
    user: root
    job: 'for vol in $(docker volume ls -q -f dangling=true); do docker volume rm $vol >/dev/null 2>&1; done'
    cron_file: docker_cleanup

- name: Restart docker
  service: 
    name: docker 
    state: restarted
    daemon_reload: yes

- name: Ensure docker users are added to the docker group.
  user:
    name: "{{ item }}"
    groups: docker
    append: true
  with_items: "{{ docker_users }}"
